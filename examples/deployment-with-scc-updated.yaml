---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-app-sa
  namespace: default
---
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: test-app-scc
  annotations:
    kubernetes.io/description: "SCC for test application"
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegedContainer: false
allowedCapabilities:
- NET_BIND_SERVICE
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
priority: 10
readOnlyRootFilesystem: false
requiredDropCapabilities:
- ALL
runAsUser:
  type: MustRunAsNonRoot
seLinuxContext:
  type: MustRunAs
seccompProfiles:
- runtime/default
supplementalGroups:
  type: RunAsAny
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:openshift:scc:test-app-scc
rules:
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - test-app-scc
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: test-app-scc-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: test-app-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: system:openshift:scc:test-app-scc
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
    spec:
      serviceAccountName: test-app-sa
      containers:
      - name: test-app
        image: nginx:1.20
        ports:
        - containerPort: 8080
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
            - CHOWN
            - SETGID
            - SETUID
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: tmp-volume
          mountPath: /tmp
        - name: host-tmp
          mountPath: /host-tmp
      volumes:
      - name: config-volume
        configMap:
          name: test-app-config
      - name: tmp-volume
        emptyDir: {}
      - name: host-tmp
        hostPath:
          path: /tmp
          type: Directory
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-app-config
  namespace: default
data:
  app.conf: |
    server {
        listen 8080;
        root /usr/share/nginx/html;
        index index.html;
    } 