---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: web-app-sa
  namespace: default
  annotations:
    description: "Service account for web application"

---
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: web-app-scc
  annotations:
    kubernetes.io/description: "SCC for web applications with comprehensive permissions"
    generated-by: "openshift-scc-ai-agent"
    generated-at: "2024-01-15T10:00:00Z"
priority: 10
allowPrivilegedContainer: false
allowHostNetwork: false
allowHostPID: false
allowHostIPC: false
allowHostPorts: false
allowHostDirVolumePlugin: true
readOnlyRootFilesystem: false
runAsUser:
  type: RunAsAny
runAsGroup:
  type: RunAsAny
seLinuxContext:
  type: MustRunAs
fsGroup:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
# This SCC already has extensive capabilities - more than the deployment needs
allowedCapabilities:
  - NET_BIND_SERVICE
  - CHOWN
  - DAC_OVERRIDE
  - SETUID
  - SETGID
  - SYS_CHROOT
requiredDropCapabilities:
  - ALL
defaultAddCapabilities: []
allowedUnsafeSysctls: []
forbiddenSysctls:
  - "*"
volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - projected
  - secret
  - hostPath
allowedHostPaths:
  - pathPrefix: /tmp
    readOnly: false
  - pathPrefix: /var/log
    readOnly: false
  - pathPrefix: /app/data
    readOnly: false
seccompProfiles:
  - runtime/default
users: []
groups: []

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:openshift:scc:web-app-scc
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
rules:
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - web-app-scc

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scc-web-app-scc-web-app-sa-default
  namespace: default
  annotations:
    generated-by: "openshift-scc-ai-agent"
    generated-at: "2024-01-15T10:00:00Z"
subjects:
- kind: ServiceAccount
  name: web-app-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: system:openshift:scc:web-app-scc
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
  namespace: default
  labels:
    app: web-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
    spec:
      serviceAccountName: web-app-sa
      containers:
      - name: web-server
        image: nginx:1.21
        ports:
        - containerPort: 80
        - containerPort: 443
        # This deployment only needs NET_BIND_SERVICE capability
        # which is already covered by the SCC above
        securityContext:
          # Only requesting basic capabilities that are already allowed
          capabilities:
            add:
              - NET_BIND_SERVICE
          # Not requesting privileged mode
          privileged: false
          # Not requesting root user
          runAsNonRoot: true
          runAsUser: 1000
          # Not requesting host access
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
        - name: logs
          mountPath: /var/log/nginx
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
      volumes:
      - name: config
        configMap:
          name: web-app-config
      - name: logs
        emptyDir: {}
      # Not using hostPath volumes or other restricted volume types
      # that would require additional permissions

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web-app-config
  namespace: default
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }
        
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    } 